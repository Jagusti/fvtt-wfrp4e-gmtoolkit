{
  "_id": "roGO31Lo4pyL5kvg",
  "name": "Send Dark Whispers",
  "type": "script",
  "author": "Zo7HSQ75uO8dWUkH",
  "img": "modules/wfrp4e-gm-toolkit/assets/icons/dark-whispers.svg",
  "scope": "global",
  "command": "formDarkWhispers()\n\nasync function formDarkWhispers () {\n  // Non-GMs are not permitted to send Dark Whispers\n  if (!game.user.isGM) {\n    return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.NoPermission\"))\n  }\n\n  // Setup: determine group of actors to be whispered to\n  const group = game.gmtoolkit.utility.getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultGroupDarkWhispers\")).filter(g => g.type === \"character\")\n  const targeted = game.gmtoolkit.utility.getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultGroupDarkWhispers\"), { interaction: \"targeted\" }).filter(g => g.type === \"character\")\n  // Setup: exit with notice if there are no player-assigned characters\n  if (!group) {\n    return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters\"))\n  }\n  // Setup: exit with notice if there are no player-assigned characters with Corruption\n  if (!group.some(g => g.system?.status?.corruption?.value > 0)) {\n    return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters\"))\n  }\n\n  // Setup dialog content\n  // Build list of characters to select via dialog\n  const characterList = []\n  group.forEach(g => {\n    characterList.push({\n      actorId: g?.actor?.id || g.id,\n      name: g?.actor?.name || g.name,\n      corruption: {\n        value: g.system?.status?.corruption?.value,\n        max: g.system?.status?.corruption?.max\n      },\n      assignedUser: game.users.players.filter(p => p.character === g)[0],\n      owners: game.users.players.filter(p => p.id in g.ownership),\n      targeted: targeted.includes(g)\n    })\n  })\n\n  // Build dialog content\n  let checkOptions = \"\"\n  characterList.forEach(actor => {\n    const canWhisperTo = (actor.corruption.value)\n      ? `enabled title=\"${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.HasCorruption\")}\"`\n      : `disabled title=\"${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.NoCorruption\")}\"`\n    const checked = (actor.targeted && actor.corruption.value) ? \"checked\" : \"\"\n    const playerOwners = actor.owners.map(m => m.name).join(\", \")\n    checkOptions += `\n      <div class=\"form-group\">\n      <input type=\"checkbox\" id=\"${actor.actorId}\" name=\"${actor.actorId}\" value=\"${actor.name}\" ${canWhisperTo} ${checked}>\n      <label for=\"${actor.actorId}\" title=\"${game.i18n.format(\"GMTOOLKIT.Dialog.DarkWhispers.PlayerTooltip\", { assignedUser: actor.assignedUser?.name || game.i18n.localize(\"GMTOOLKIT.Dialog.None\"), playerOwners: playerOwners })}\"> <strong>${actor.name}</strong> (${actor.assignedUser?.name || game.i18n.localize(\"GMTOOLKIT.Dialog.NotAssigned\")})</label>\n      <label for=\"${actor.actorId}\"> ${actor.corruption.value} / ${actor.corruption.max} ${game.i18n.localize(\"NAME.Corruption\")} </label>\n      </div>\n    `\n  })\n\n  // Construct and show form\n  const darkwhisper = (game.tables.getName(game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\")))\n    ? await game.tables.getName(game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\")).draw(\n      { displayChat: false }\n    ).then(w => w.results[0].text)\n    : game.i18n.format(\"GMTOOLKIT.Dialog.DarkWhispers.ImportTable\")\n\n  const dialogContent = `\n    <div class=\"form-group \">\n      <label for=\"targets\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.WhisperTargets\")} </label>\n    </div>\n    ${checkOptions} \n    <div class=\"form-group message\">\n      <label for=\"message\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.WhisperMessage\")}</label>\n    </div>\n    <div class=\"form-group\">\n      <textarea id=\"message\" name=\"message\" rows=\"4\" cols=\"50\">${darkwhisper}</textarea>\n    </div>\n    <div class=\"form-group\">\n      <input type=\"checkbox\" id=\"sendToOwners\" name=\"sendToOwners\">\n      <label for=\"sendToOwners\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.SendToOwners\")}</label>\n    </div>\n  `\n\n  new Dialog({\n    title: game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\"),\n    content: dialogContent,\n    buttons: {\n      cancel: {\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n        callback: () => abortWhisper()\n      },\n      whisper: {\n        label: game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.SendWhisper\"),\n        callback: html => sendDarkWhispers(html, characterList, html.find('[name=\"sendToOwners\"]')[0].checked)\n      }\n    }\n  }).render(true)\n}\n\nfunction sendDarkWhispers (html, characterList, sendToOwners) {\n  // Build list of selected players ids for whispers target\n  const characterTargets = []\n  const playerRecipients = []\n\n  for ( const character of characterList ) {\n    if (html.find(`[name=\"${character.actorId}\"]`)[0].checked) {\n      characterTargets.push(character.name)\n      sendToOwners\n        ? playerRecipients.push(...character.owners.map(m => m.id))\n        : playerRecipients.push(character.assignedUser?.id)\n    }\n  }\n\n  // Check for whisper message\n  darkwhisper = html.find('[name=\"message\"]')[0].value\n  // Abort if no whisper or character is selected\n  if (playerRecipients.filter(p => p === undefined).length\n    === playerRecipients.length\n    || !playerRecipients.length || !darkwhisper\n  ) return abortWhisper()\n\n  // Construct and send message to whisper targets\n  // Build the translation string based on the setting\n  const messageTemplate = `GMTOOLKIT.Settings.DarkWhispers.message.${game.settings.get(\"wfrp4e-gm-toolkit\", \"messageDarkWhispers\")}`\n  // Parse the translated message\n  const whisperMessage = `${game.i18n.format(messageTemplate, { message: darkwhisper })}`\n  // Add response buttons for chat card. data- attributes are used by listener.\n  const responseButtons = `\n    <span class=\"chat-card-button-area\">\n    <a class=\"chat-card-button darkwhisper-button\" data-button=\"actOnWhisper\" data-ask=\"${game.i18n.format(darkwhisper)}\">${game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.Accept\")}</a>\n    <a class=\"chat-card-button darkwhisper-button\" data-button=\"denyDarkGods\" data-ask=\"${game.i18n.format(darkwhisper)}\">${game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.Reject\")}</a>\n    </span>\n    `\n  // Post the message\n  ChatMessage.create({\n    content: whisperMessage + responseButtons,\n    whisper: playerRecipients,\n    flavor: characterTargets.join(\", \")\n  })\n}\n\nfunction abortWhisper () {\n  return ui.notifications.warn(\n    game.i18n.format(\"GMTOOLKIT.Message.DarkWhispers.WhisperAborted\", { currentUser: game.user.name }),\n    { console: false }\n  )\n}\n\n\n/* ==========\n* MACRO: Send Dark Whispers\n* VERSION: 0.9.5\n* UPDATED: 2022-08-14\n* DESCRIPTION: Open a dialog to send a Dark Whisper (WFRP p183) to one or more selected player character(s).\n* TIP: Only player-assigned or player-owned characters with Corruption can be sent a Dark Whisper.\n* TIP: The placeholder whisper is drawn from the Dark Whispers table. Change this for different random whispers.\n* TIP: The whisper can be edited in the dialog, regardless of what is pre-filled from the Dark Whispers table.\n* TIP: Actor tokens that are targeted in a scene are pre-selected in the Send Dark Whisper dialog.\n========== */",
  "folder": null,
  "sort": 0,
  "flags": {
    "core": {
      "sourceId": "Macro.NsfnGgD7GMH7AMwI"
    },
    "wfrp4e-gm-toolkit": {
      "version": "0.9.5"
    }
  },
  "ownership": {
    "default": 0
  },
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "6.0.0",
    "coreVersion": "10.279",
    "createdTime": null,
    "modifiedTime": 1661464957964,
    "lastModifiedBy": "WpuDIfNQnefaTyuV"
  },
  "_key": "!macros!roGO31Lo4pyL5kvg"
}
