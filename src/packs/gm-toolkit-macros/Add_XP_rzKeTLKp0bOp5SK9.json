{
  "_id": "rzKeTLKp0bOp5SK9",
  "name": "Add XP",
  "type": "script",
  "author": "k5y1jEYMBqd9uLUx",
  "img": "modules/wfrp4e-gm-toolkit/assets/icons/add-xp.svg",
  "scope": "global",
  "command": "addXP()\n\nasync function addXP () {\n\n  // Setup: determine group of actors to be awarded experience\n  let awardees = []\n  if (game.user.targets.size < 1) {\n    // (1) all assigned player characters\n    awardees = game.gmtoolkit.utility\n      .getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultPartySessionTurnover\"))\n      .filter(g => g.type === \"character\")\n  } else {\n    // (2) all targeted tokens of awardee selection\n    awardees = game.gmtoolkit.utility\n      .getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultPartySessionTurnover\"), { interaction: \"targeted\" })\n      .filter(g => g.type === \"character\")\n  }\n\n  // Setup: exit with notice if there are no player-assigned characters\n  if (awardees.length < 1) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Token.TargetPCs\"), {})\n\n  // Get  session ID/date, default XP award and default reason\n  const XP = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultAmount\"))\n  let reason = (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\") === \"null\")\n    ? \"\"\n    : game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\")\n  if (reason) {\n    reason = game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\")\n    const session = game.gmtoolkit.utility.getSession()\n    reason = (session.date)\n      ? reason.replace(\"(%date%)\", `(${session.date})`)\n      : reason.replace(\" (%date%)\", \"\")\n    reason = (session.id !== \"null\" )\n      ? reason.replace(\"%session%\", session.id)\n      : reason = reason.replace(\"%session%\", \"\")\n  }\n\n  // Prompt for XP if option is set\n  if (game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPPrompt\")) {\n    let awardeeList = \"<ul>\"\n    awardees.forEach(pc => {\n      awardeeList += `<li>${pc?.actor?.name || pc.name}</li>`\n    })\n    awardeeList += \"</ul>\"\n    const dialog = new Dialog({\n      title: game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Title\"),\n      content: `<form>\n              <p>${game.i18n.format(\"GMTOOLKIT.Dialog.AddXP.Recipients\", { recipients: awardeeList })}</p>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Prompt\")}</label> \n                <input type=\"text\" id=\"add-xp\" name=\"add-xp\" value=\"${XP}\" />\n              </div>\n              <div class=\"form-group\">\n                <label>${game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Reason\")}</label> \n                <input type=\"text\" id=\"xp-reason\" name=\"xp-reason\" value=\"${reason}\" />\n              </div>\n          </form>`,\n      buttons: {\n        yes: {\n          icon: \"<i class='fas fa-check'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Apply\"),\n          callback: html => {\n            const XP = Math.round(html.find(\"#add-xp\").val())\n            if (isNaN(XP)) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.InvalidXP\"))\n            const reason = html.find(\"#xp-reason\").val()\n            updateXP(awardees, XP, reason)\n          }\n        },\n        no: {\n          icon: \"<i class='fas fa-times'></i>\",\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\")\n        }\n      },\n      default: \"yes\"\n    }).render(true)\n  } else {\n    updateXP(awardees, XP, reason)\n  }\n\n} // END: addXP\n\nfunction updateXP (awardees, XP, reason) {\n  let chatContent = \"\"\n\n  // Cycle through player characters, gathering experience change data for report message\n  awardees.forEach(pc => {\n    const recipient = pc?.actor?.name || pc.name\n    const XPTotal = pc?.details?.experience?.total\n    const newXPTotal = Math.max(XPTotal + XP, 0)\n    const XPCurrent = pc?.details?.experience?.current || 0\n    const newXPCurrent = Math.max(XPCurrent + XP, 0)\n\n    // Update token actor or actor\n    pc?.actor ? pc.actor.awardExp(XP, reason) : pc.awardExp(XP, reason)\n\n    // Build report message\n    chatContent += game.i18n.format(\"GMTOOLKIT.AddXP.Success\", { recipient, XPTotal, newXPTotal, XPCurrent, newXPCurrent } )\n  }) // End cycle\n\n  // confirm changes made in whisper to GM\n  const chatData = game.wfrp4e.utility.chatDataSetup(chatContent, \"gmroll\", false)\n  chatData.flavor = game.i18n.format(\"GMTOOLKIT.AddXP.Flavor\", { XP, reason })\n  ChatMessage.create(chatData, {})\n  console.log(chatContent)\n\n} // END: updateXP\n\n\n/* ==========\n * MACRO: Add XP\n * VERSION: 6.1.0\n * UPDATED: 2022-10-23\n * DESCRIPTION: Adds a set amount of XP to all or targeted player character(s). Adds XP update note to the chat log.\n * TIP: Characters must have a player assigned (if default group is 'party') or be player-owned (if default group is 'company').\n * TIP: Default XP amount and reason can be preset in module settings, along with option to bypass prompt for XP amount each time.\n * TIP: Non-whole numbers are rounded off. Negative numbers are subtracted.\n ========== */",
  "folder": null,
  "sort": 0,
  "flags": {
    "wfrp4e-gm-toolkit": {
      "version": "6.1.0"
    }
  },
  "ownership": {
    "default": 0
  },
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "6.1.4",
    "coreVersion": "10.288",
    "createdTime": null,
    "modifiedTime": 1666489057871,
    "lastModifiedBy": "Yz8naH0UqWS3uLwh"
  },
  "_key": "!macros!rzKeTLKp0bOp5SK9"
}
