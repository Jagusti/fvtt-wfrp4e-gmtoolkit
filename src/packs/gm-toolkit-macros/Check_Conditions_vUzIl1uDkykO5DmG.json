{
  "_id": "vUzIl1uDkykO5DmG",
  "name": "Check Conditions",
  "type": "script",
  "author": "WpuDIfNQnefaTyuV",
  "img": "modules/wfrp4e-gm-toolkit/assets/icons/aura-conditions.svg",
  "scope": "global",
  "command": "checkConditions(endOfCombatRoundOnly = true, skipPCs = true)\n\nasync function checkConditions () {\n  if (!game.user.isGM) return\n\n  if (endOfCombatRoundOnly && !isEndOfRound()) return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.CheckConditions.WaitForEndOfRound\"))\n\n  const tokens = game.gmtoolkit.utility.getGroup(\"tokens\").filter(g => g.actor.conditions.length !== 0)\n  const party = game.gmtoolkit.utility.getGroup(\"party\").filter(g => g.conditions.length !== 0)\n\n  const testOptions = {\n    absolute: { difficulty: \"challenging\" },\n    rollMode: \"gmroll\"\n  }\n\n  const removedConditions = []\n\n  for await (const tokenActor of tokens) {\n    if (skipPCs && party.includes(tokenActor.actor)) continue\n    testOptions.appendTitle = game.i18n.format(\"GMTOOLKIT.Dialog.CheckConditions.For\", { name: tokenActor.actor.name })\n\n    for await (cond of tokenActor.actor.conditions) {\n      await processConditionTest(\n        tokenActor, testOptions, cond.conditionId, removedConditions\n      )\n    }\n  }\n\n  if (removedConditions.length !== 0) ChatMessage.create({ content: removedConditions.join(\"<br>\") })\n\n  return removedConditions  // END OF FUNCTION\n\n  function isEndOfRound () {\n    const combat = game.combat\n    if (!combat) return false\n    if (combat.round !== 0 && combat.turns && combat.active) {\n      return (\n        combat.current.turn > -1\n        && combat.current.turn === combat.turns.length - 1\n      )\n    }\n  }\n\n  async function processConditionTest (\n    tokenActor, testOptions, condition, removedConditions\n  ) {\n    if (tokenActor.actor.type === \"vehicle\" && condition !== \"ablaze\") return  // Vehicles can burn, but not make condition tests\n    const title = `${game.i18n.localize(game.wfrp4e.config.conditions[condition])}`\n    const conditionCount = tokenActor.actor\n      .hasCondition(condition)\n      .conditionValue\n    let conditionRemoved = \"\"\n    let setupData = {}\n    let conditionTest = {}\n    let skill = {}\n    // Show the roll dialog for broken condition tests, so the difficulty can be correctly set\n    // note: cancelling the roll dialog cancels any outstanding condition checks\n    condition === \"broken\" ? testOptions.bypass = false : testOptions.bypass = true\n\n    switch (condition) {\n      case \"surprised\": // Lose condition\n        tokenActor.actor.removeCondition(condition)\n        conditionRemoved = condition\n        break\n      case \"ablaze\":  // Lose 1d10-TB-AP+(condition-1) (min 1) Wounds\n        // doesn't consider the least protected hit location, but does show how much damage is absorbed by AP for manual adjustment if desired\n        const ablazeDamage = await new Roll(`1d10 + ${conditionCount} - 1`).evaluate()\n        tokenActor.actor.applyBasicDamage(ablazeDamage.total, {})\n        break\n      case \"stunned\": // Challenging Endurance: remove 1+SL (min 1) condition\n        // fall through:\n      case \"poisoned\": // Challenging Endurance: remove 1+SL (min 1) condition\n        skill = game.gmtoolkit.utility.hasSkill(tokenActor.actor, game.i18n.localize(\"NAME.Endurance\"), \"silent\")\n        // Setup test data\n        if (skill !== undefined) {   // Prefer Endurance test\n          testOptions.title = game.i18n.format(\"GMTOOLKIT.Dialog.CheckConditions.Skill\", { title, skill: game.i18n.localize(\"NAME.Endurance\") })\n          setupData = await tokenActor.actor.setupSkill(skill, testOptions)\n        }\n        if (skill === undefined) {  // Fallback to Toughness if no Endurance skill\n          testOptions.title = game.i18n.format(\"GMTOOLKIT.Dialog.CheckConditions.Fallback\", { title, char: game.i18n.localize(\"CHAR.T\") })\n          setupData = await tokenActor.actor.setupCharacteristic(\"t\", testOptions)\n        }\n        // Process test\n        await processConditionTest()\n        break\n      case \"broken\":  // Challenging Cool: remove 1+SL (min 1) condition\n        skill = game.gmtoolkit.utility.hasSkill(tokenActor.actor, game.i18n.localize(\"NAME.Cool\"), \"silent\")\n        // Setup test data\n        if (skill !== undefined) {   // Prefer Cool test\n          testOptions.title = game.i18n.format(\"GMTOOLKIT.Dialog.CheckConditions.Skill\", { title, skill: game.i18n.localize(\"NAME.Cool\") })\n          setupData = await tokenActor.actor.setupSkill(skill, testOptions)\n        }\n        if (skill === undefined) {  // Fallback to Willpower if no Cool skill\n          testOptions.title = game.i18n.format(\"GMTOOLKIT.Dialog.CheckConditions.Fallback\", { title, char: game.i18n.localize(\"CHAR.WP\") })\n          setupData = await tokenActor.actor.setupCharacteristic(\"t\", testOptions)\n        }\n        // Process test\n        await processConditionTest()\n        break\n      default:\n        break\n    }\n    // Collect removed conditions\n    if (conditionRemoved !== \"\") {\n      removedConditions.push(\n        game.i18n.format(\"CHAT.RemovedConditions\", {\n          condition: title,\n          name: tokenActor.actor.name\n        })\n      )\n    }\n\n    async function processConditionTest () {\n      conditionTest = await tokenActor.actor.basicTest(setupData)\n      if (conditionTest.succeeded) {\n        tokenActor.actor.removeCondition(\n          condition,\n          Math.min(Number(conditionTest.result.SL) + 1, conditionCount)\n        )\n        conditionRemoved = condition\n      }\n      return conditionTest\n    }\n  } // End processConditionTest\n}\n\n\n/* ==========\n* MACRO: Check Conditions\n* VERSION: 0.9.5\n* UPDATED: 2022-08-14\n* DESCRIPTION: Process end of round condition checks. Automatically handle removal of Surprised condition, tests to remove Poisoned, Stunned and Broken conditions, and Ablaze damage (including to vehicles).\n* TIP: Set `skipPCs = false` to automatically make condition checks for player-assigned characters.\n* TIP: Set `endOfCombatRoundsOnly = false` to use the macro in any combat round, or even outside combat.\n========== */",
  "folder": null,
  "sort": 0,
  "flags": {
    "core": {
      "sourceId": "Macro.YSvf5jsBKPTkkULa"
    },
    "wfrp4e-gm-toolkit": {
      "version": "0.9.5"
    }
  },
  "ownership": {
    "default": 0
  },
  "_stats": {
    "systemId": "wfrp4e",
    "systemVersion": "6.0.0",
    "coreVersion": "10.279",
    "createdTime": null,
    "modifiedTime": 1661498020084,
    "lastModifiedBy": "WpuDIfNQnefaTyuV"
  },
  "_key": "!macros!vUzIl1uDkykO5DmG"
}
